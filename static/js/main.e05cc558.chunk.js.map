{"version":3,"sources":["components/OrderBook/BidsBook.js","components/OrderBook/AsksBook.js","store/OrderBook/actions/update_bids.js","store/OrderBook/actions/clear_bids.js","store/OrderBook/actions/update_asks.js","store/OrderBook/actions/clear_asks.js","containers/OrderBook.js","store/reducers.js","store/OrderBook/reducers/bids.js","store/OrderBook/reducers/asks.js","App.js","serviceWorker.js","index.js"],"names":["BidsBook","self","this","props","orderBookBids","map","row","index","react_default","a","createElement","className","key","price","style","display","position","right","background","width","concat","total","length","toFixed","zoom","height","count","amount","Table_default","responsive","renderBidRows","Component","AsksBook","orderBookAsks","amountAbs","Math","abs","left","renderAskRows","updateBidsOrderBook","newBidsData","type","clearBidsOrderBook","updateAsksOrderBook","newAsksData","clearAsksOrderBook","ws","OrderBook","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","connectionReady","isConnected","volume24h","lastPrice","priceChange","subscribeToAll","closeConnection","payloadData","onConnectionClosed","e","console","log","Sockette","timeout","maxAttempts","onopen","setState","bookRequest","JSON","stringify","event","channel","symbol","send","onmessage","parse","data","Array","isArray","tmpbookOrderRow","parseFloat","onreconnect","onmaximum","onclose","onerror","close","currentNumber","toString","replace","priceChangeColor","priceChangeSign","Container_default","fluid","Row_default","Col_default","lg","formmatNumberWithCommas","color","ButtonToolbar_default","marginBottom","marginTop","Button_default","disabled","onClick","zoomOut","bind","zoomIn","OrderBook_BidsBook","OrderBook_AsksBook","connect","tradesList","dispatch","bindActionCreators","rootReducer","combineReducers","arguments","undefined","action","newState","priceExists","forEach","slice","newStateCombined","toConsumableArray","sort","b","pop","splice","createStoreWithMiddleware","applyMiddleware","createStore","App","es","store","reducers","containers_OrderBook","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e05cc558.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/lib/Table\";\n\nclass BidsBook extends Component {\n  \n  renderBidRows() {\n    let self = this;\n    if (!this.props.orderBookBids) {\n      return <h2>Loading...</h2>;\n    }\n    return this.props.orderBookBids.map(function(row, index) {\n      return (\n        <tr className=\"bids-row\" key={row.price}>\n          <td\n            style={{\n              display: index > 23 ? \"none\" : \"initial\",\n              position: \"absolute\",\n              right: \"0px\",\n              background: \"rgba(82,108,46, 0.3)\",\n              width: `calc(${(\n                (100 * row.total) /\n                self.props.orderBookBids[self.props.orderBookBids.length - 1]\n                  .total\n              ).toFixed(0) * self.props.zoom}% - 20px)`,\n              height: \"37px\",\n            }}\n          />\n          <td className=\"text-center\">{row.count}</td>\n          <td className=\"text-right\">{row.amount}</td>\n          <td className=\"text-right\">{row.total}</td>\n          <td className=\"text-right\">{row.price}</td>\n        </tr>\n      );\n    });\n  }\n\n \n  render() {\n    return (\n      <div>\n        <Table responsive>\n          <thead>\n            <tr>\n              <th />\n              <th className=\"text-center\">COUNT</th>\n              <th className=\"text-right\">AMOUNT</th>\n              <th className=\"text-right\">TOTAL</th>\n              <th className=\"text-right\">PRICE</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderBidRows()}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default BidsBook;\n","import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/lib/Table\";\n\nclass AsksBook extends Component {\n  \n  renderAskRows() {\n    let self = this;\n    if (!this.props.orderBookAsks) {\n      return <h2>Loading...</h2>;\n    }\n    return this.props.orderBookAsks.map(function(row, index) {\n      let amountAbs = Math.abs(row.amount);\n      return (\n        <tr key={row.price}>\n          <td\n            style={{\n              display: index > 23 ? \"none\" : \"initial\",\n              position: \"absolute\",\n              left: \"0px\",\n              background: \"rgba(139,42,2, 0.3)\",\n              width: `calc(${(\n                (100 * row.total) /\n                self.props.orderBookAsks[self.props.orderBookAsks.length - 1]\n                  .total\n              ).toFixed(0) * self.props.zoom}% - 20px)`,\n              height: \"37px\",\n            }}\n          />\n          <td className=\"text-right\">{row.price}</td>\n          <td className=\"text-right\">{row.total}</td>\n          <td className=\"text-right\">{amountAbs}</td>\n          <td className=\"text-center\">{row.count}</td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Table responsive>\n          <thead>\n            <tr>\n              <th />\n              <th className=\"text-right\">\n                PRICE\n              </th>\n              <th className=\"text-right\">TOTAL</th>\n              <th className=\"text-right\">AMOUNT</th>\n              <th className=\"text-center\">COUNT</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderAskRows()}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default AsksBook;\n","function updateBidsOrderBook(newBidsData) {\n  return {\n    type: 'UPDATE_BIDS_ORDER_BOOK',\n    newBidsData: newBidsData\n  }\n}\nexport default updateBidsOrderBook;","function clearBidsOrderBook(newBidsData) {\n  return {\n    type: 'CLEAR_BIDS',\n    newBidsData: []\n  }\n}\nexport default clearBidsOrderBook;","function updateAsksOrderBook(newAsksData) {\n  return {\n    type: 'UPDATE_ASKS_ORDER_BOOK',\n    newAsksData: newAsksData\n  }\n}\nexport default updateAsksOrderBook;","function clearAsksOrderBook(newAsksData) {\n  return {\n    type: 'CLEAR_ASKS',\n    newAsksData: []\n  }\n}\nexport default clearAsksOrderBook;","import React, { Component } from \"react\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport ButtonToolbar from \"react-bootstrap/lib/ButtonToolbar\";\n\nimport Container from \"react-bootstrap/lib/Container\";\nimport Sockette from \"sockette\";\n\nimport BidsBook from \"../components/OrderBook/BidsBook\";\nimport AsksBook from \"../components/OrderBook/AsksBook\";\n\nimport { connect } from \"react-redux\";\nimport updateBidsOrderBook from \"../store/OrderBook/actions/update_bids\";\nimport clearBidsOrderBook from \"../store/OrderBook/actions/clear_bids\";\nimport updateAsksOrderBook from \"../store/OrderBook/actions/update_asks\";\nimport clearAsksOrderBook from \"../store/OrderBook/actions/clear_asks\";\nimport { bindActionCreators } from \"redux\";\n\n\nlet ws;\nclass OrderBook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      connectionReady: true,\n      isConnected: false,\n      volume24h: 0,\n      lastPrice: 0,\n      priceChange: 0,\n      zoom:1\n    };\n  }\n  componentDidMount() {\n    this.subscribeToAll();\n  }\n  componentWillUnmount() {\n    this.closeConnection();\n  }\n  subscribeToAll() {\n    const self = this;\n    let payloadData = {};\n    function onConnectionEstablished(e) {\n      console.log(\"connected\");\n      console.log(e);\n      self.setState({ connectionReady: true });\n      let bookRequest = JSON.stringify({\n        event: \"subscribe\",\n        channel: \"book\",\n        symbol: \"tBTCUSD\",\n      });\n      ws.send(bookRequest);\n    }\n\n    function onConnectionClosed(e) {\n      console.log(\"closed\");\n      console.log(e);\n    }\n\n    function onMessageRecieved(e) {\n      payloadData = JSON.parse(e.data);\n      console.log(e);\n      console.log(payloadData);\n\n      if (\n        !payloadData.event &&\n        Array.isArray(payloadData[1]) &&\n        payloadData[1].length === 3\n      ) {\n        //Is order book data\n        let tmpbookOrderRow = {\n          price: parseFloat(payloadData[1][0]).toFixed(1),\n          count: payloadData[1][1],\n          amount: parseFloat(payloadData[1][2]).toFixed(2),\n          total: parseFloat(0).toFixed(2),\n        };\n        if (tmpbookOrderRow.amount > 0) {\n          self.props.updateBidsOrderBook(tmpbookOrderRow);\n        } else {\n          self.props.updateAsksOrderBook(tmpbookOrderRow);\n        }\n      }\n    }\n    ws = new Sockette(\"wss://api-pub.bitfinex.com/ws/2\", {\n      timeout: 5e3,\n      maxAttempts: 10,\n      onopen: onConnectionEstablished,\n      onmessage: onMessageRecieved,\n      onreconnect: (e) => console.log(\"Reconnecting...\", e),\n      onmaximum: (e) => console.log(\"Stop Attempting!\", e),\n      onclose: (e) => onConnectionClosed,\n      onerror: (e) => console.log(\"Error:\", e),\n    });\n    this.setState({ isConnected: true });\n  }\n\n  closeConnection() {\n    ws.close();\n    this.setState({ isConnected: false });\n  }\n\n  formmatNumberWithCommas(currentNumber) {\n    return currentNumber.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  zoomOut() {\n    this.setState({ zoom: this.state.zoom - 0.2 });\n  }\n\n  zoomIn() {\n    this.setState({ zoom: this.state.zoom + 0.2 });\n  }\n\n  render() {\n    let priceChangeColor =\n      this.state.priceChange >= 0 ? \"rgba(82,108,46)\" : \"rgba(139,42,2)\";\n    priceChangeColor =\n      this.state.priceChange === 0 ? \"white\" : priceChangeColor;\n\n    let priceChangeSign = this.state.priceChange >= 0 ? \" +\" : \" -\";\n    priceChangeSign = this.state.priceChange === 0 ? \"\" : priceChangeSign;\n\n    return (\n      <Container fluid={true}>\n        <Row>\n          <Col lg={12} className=\"buttons-container text-left mb-3\">\n            <div className=\"ticker-container text-left\">\n              <h3>BTC/USD</h3>\n              <p>\n                Last Price (USD):{\" \"}\n                {this.formmatNumberWithCommas(this.state.lastPrice.toFixed(1))}{\" \"}\n                / 24h VOL (BTC):{\" \"}\n                {this.formmatNumberWithCommas(this.state.volume24h.toFixed(0))}\n              </p>\n              <p style={{ color: priceChangeColor }}>\n                Price Change:\n                {priceChangeSign} {this.state.priceChange.toFixed(2)}%\n              </p>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Container fluid={true}>\n            <Row>\n              <Col lg={12}>\n                <ButtonToolbar\n                  style={{ marginBottom: \"20px\", marginTop: \"20px\" }}\n                >\n                  <Button\n                    disabled={this.state.zoom < 0.21}\n                    onClick={this.zoomOut.bind(this)}\n                  >\n                    Zoom Out\n                  </Button>\n                  <Button\n                    disabled={this.state.zoom === 1}\n                    onClick={this.zoomIn.bind(this)}\n                  >\n                    Zoom In\n                  </Button>\n                </ButtonToolbar>\n              </Col>\n            </Row>\n            <Row>\n              <Col lg={6} className=\"bids-container\">\n                <BidsBook orderBookBids={this.props.orderBookBids} zoom={this.state.zoom} />\n              </Col>\n              <Col lg={6} className=\"asks-container\">\n                <div className=\"depth-bars-asks-container\" />\n                <AsksBook orderBookAsks={this.props.orderBookAsks} zoom={this.state.zoom} />\n              </Col>\n            </Row>\n          </Container>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderBookBids: state.orderBookBids,\n    orderBookAsks: state.orderBookAsks,\n    tradesList: state.tradesList,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      updateAsksOrderBook: updateAsksOrderBook,\n      updateBidsOrderBook: updateBidsOrderBook,\n      clearBidsOrderBook: clearBidsOrderBook,\n      clearAsksOrderBook: clearAsksOrderBook,\n    },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderBook);\n","import { combineReducers } from 'redux';\nimport OrderBookBidsReducer from './OrderBook/reducers/bids'\nimport OrderBookAsksReducer from './OrderBook/reducers/asks'\n\nconst rootReducer = combineReducers({\n\torderBookBids: OrderBookBidsReducer,\n\torderBookAsks: OrderBookAsksReducer,\n});\n\nexport default rootReducer;","export default function (state = [], action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_BIDS_ORDER_BOOK': \n\t\t\tlet newState = action.newBidsData;\n\t\t\tlet priceExists = false;\n\n\t\t\tif (state.length > 0) {\n\t\t\t\tstate.forEach(function(row, index){\n\t\t\t\t\tif (state[index].price && newState.price && (state[index].price === newState.price)) {\n\t\t\t\t\t\t//Price already exists, so it should only update current row.\n\t\t\t\t\t\tpriceExists = true;\n\t\t\t\t\t\tstate[index].count = newState.count;\n\t\t\t\t\t\tstate[index].amount = newState.amount;\n\t\t\t\t\t\t// state[index].total = (state[index - 1] ? state[index - 1].total : 0) + newState.amount;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tif (priceExists === true) {\n\t\t\t\tpriceExists = false;\n\t\t\t\treturn state.slice()\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\tlet newStateCombined = [...state, newState];\n\t\t\t\t\t//Sort form highest to lowest price before returning.\n\t\t\t\t\tnewStateCombined.sort(function(a, b){\n\t\t\t\t\t    return b.price - a.price;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (newStateCombined.length > 50) {\n\t\t\t\t\t\tnewStateCombined.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (newStateCombined.length > 0) {\n\t\t\t\t\t\tnewStateCombined.forEach(function(row, index){\n\t\t\t\t\t\t\tif (!row || row.count === 0) {\n\t\t\t\t\t\t\t\tnewStateCombined.splice(index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnewStateCombined.forEach(function(row, index){\n\t\t\t\t\t\t\tif (newStateCombined[index - 1] && newStateCombined[index - 1].total) {\n\t\t\t\t\t\t\t\tnewStateCombined[index].total = (parseFloat(newStateCombined[index - 1].total) + parseFloat(row.amount)).toFixed(2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tnewStateCombined[index].total = parseFloat(row.amount).toFixed(2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newStateCombined;\n\t\t\t\t}\n\t\tcase 'CLEAR_BIDS': \n\t\t\t\treturn action.newBidsData;\n\t\tdefault:\n      \t\treturn state.slice()\n\t}\n}","export default function (state = [], action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_ASKS_ORDER_BOOK': \n\t\t\tlet newState = action.newAsksData;\n\t\t\tlet priceExists = false;\n\n\t\t\tif (state.length > 0) {\n\t\t\t\tstate.forEach(function(row, index){\n\t\t\t\t\tif (state[index].price && newState.price && (state[index].price === newState.price)) {\n\t\t\t\t\t\t//Price already exists, so it should only update current row.\n\t\t\t\t\t\tpriceExists = true;\n\t\t\t\t\t\tstate[index].count = newState.count;\n\t\t\t\t\t\tstate[index].amount = newState.amount;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tif (priceExists === true) {\n\t\t\t\tpriceExists = false;\n\t\t\t\treturn state.slice()\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\tlet newStateCombined = [...state, newState];\n\t\t\t\t\t//Sort form lowest to highest price before returning.\n\t\t\t\t\tnewStateCombined.sort(function(a, b){\n\t\t\t\t\t    return a.price - b.price;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (newStateCombined.length > 50) {\n\t\t\t\t\t\tnewStateCombined.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (newStateCombined.length > 0) {\n\t\t\t\t\t\tnewStateCombined.forEach(function(row, index){\n\t\t\t\t\t\t\tif (!row || row.count === 0) {\n\t\t\t\t\t\t\t\tnewStateCombined.splice(index, 1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!row || row.amount > 0) {\n\t\t\t\t\t\t\t\tnewStateCombined.splice(index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// row.amount = row.amount;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnewStateCombined.forEach(function(row, index){\n\t\t\t\t\t\t\tif (newStateCombined[index - 1] && newStateCombined[index - 1].total) {\n\t\t\t\t\t\t\t\tnewStateCombined[index].total = (parseFloat(newStateCombined[index - 1].total) + Math.abs(parseFloat(row.amount))).toFixed(2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tnewStateCombined[index].total = Math.abs(parseFloat(row.amount).toFixed(2));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newStateCombined;\n\t\t\t\t}\n\t\t\tcase 'CLEAR_ASKS': \n\t\t\t\treturn action.newAsksData;\n\n\t\tdefault:\n      \t\treturn state.slice()\n\t}\n}","import React, { Component } from 'react';\nimport OrderBook from './containers/OrderBook';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './store/reducers';\n\nimport './scss/App.scss';\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={createStoreWithMiddleware(reducers)}>\n        <div className=\"App\">\n          <OrderBook/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}