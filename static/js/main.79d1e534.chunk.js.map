{"version":3,"sources":["components/OrderBook/Row.js","components/OrderBook/BidsBook.js","components/OrderBook/AsksBook.js","store/OrderBook/actions/update_bids.js","store/OrderBook/actions/update_asks.js","store/OrderBook/actions/clear_asks.js","store/OrderBook/actions/clear_bids.js","containers/OrderBook.js","store/OrderBook/reducerUtil.js","store/store.js","store/OrderBook/reducers/bids.js","store/OrderBook/reducers/asks.js","App.js","serviceWorker.js","index.js"],"names":["Row","_ref","row","index","books","zoom","type","width","total","length","toFixed","staticStyle","display","position","concat","height","style","Object","objectSpread","background","right","left","react_default","a","createElement","className","key","price","count","Math","abs","parseFloat","amount","BidsBook","props","role","orderBookBids","map","OrderBook_Row","AsksBook","orderBookAsks","updateBidsOrderBook","newBidsData","updateAsksOrderBook","newAsksData","clearAsksOrderBook","clearBidsOrderBook","wss","WebSocket","OrderBook","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","connectionReady","isConnected","pres","volume24h","lastPrice","priceChange","subscribeToBtc","closeConnection","setState","self","onopen","console","log","send","JSON","stringify","event","flags","channel","pair","prec","len","onmessage","evt","payloadData","Array","isArray","tmpbookOrderRow","onMessageRecieved","parse","data","onclose","close","disabled","onClick","zoomOut","bind","zoomIn","OrderBook_BidsBook","OrderBook_AsksBook","Component","connect","tradesList","dispatch","bindActionCreators","reducerUtil","arguments","undefined","newState","asks","priceExists","forEach","slice","newStateCombined","toConsumableArray","sort","b","pop","splice","rootReducer","combineReducers","action","dataManimpulator","persistedStore","stateStr","localStorage","getItem","e","error","loadFromLocalStorage","store","createStore","subscribe","setItem","saveToLocalStorage","getState","App","es","reducers","containers_OrderBook","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79d1e534.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Row({row,index,books,zoom,type}) {\n    let width = ((100 * row.total) / books[books.length - 1].total).toFixed(0) * zoom\n    let staticStyle =  {\n        display: index > 23 ? \"none\" : \"initial\",\n        position: \"absolute\",\n        width: `calc(${width}% - 20px)`,\n        height: \"17px\",\n      } \n    let style = type === 'bits' ? {...staticStyle, background:\"rgba(82,108,46, 0.3)\", right: \"0px\"}:{...staticStyle, background:\"rgba(139,42,2, 0.3)\",left: \"0px\"}\n   return (<div className={type === 'bits' ? \"flex-table\" : \"flex-table reverse\"} key={row.price}>\n   <span\n     style={style}\n   />\n   <div className=\"flex-row\">{row.count}</div>\n   <div className=\"flex-row\">{Math.abs(parseFloat(row.amount)).toFixed(4)}</div>\n   <div className=\"flex-row\">{parseFloat(row.total).toFixed(4)}</div>\n   <div className=\"flex-row\">{row.price}</div>\n </div>)\n }\n\n export default Row;","import React from \"react\";\nimport Row from './Row';\n\nfunction BidsBook(props) {\n  \n  function renderBidRows() {\n    \n    if (!props.orderBookBids) {\n      return <h2>Loading...</h2>;\n    }\n    return props.orderBookBids.map((row, index) =><Row\n      key={row.price}\n      row={row}\n      index={index}\n      books={props.orderBookBids}\n      zoom={props.zoom}\n      type={\"bits\"}\n    />);\n  } \n    return (\n\n      <div className=\"table-container\">\n      <div className=\"flex-table header\" role=\"rowgroup\">\n        <div className=\"flex-row\">COUNT</div>\n        <div className=\"flex-row\">AMOUNT</div>\n        <div className=\"flex-row\">TOTAL</div>\n        <div className=\"flex-row\">PRICE</div>\n      </div>\n      {renderBidRows()}\n    </div>\n    );\n}\n\nexport default BidsBook;\n","import React from \"react\";\nimport Row from \"./Row\";\n\nfunction AsksBook(props) {\n  function renderAskRows() {\n    if (!props.orderBookAsks) {\n      return <h2>Loading...</h2>;\n    }\n    return props.orderBookAsks.map((row, index) =><Row\n      key={row.price}\n      row={row}\n      index={index}\n      books={props.orderBookAsks}\n      zoom={props.zoom}\n      type={\"asks\"}\n    />);\n  }\n  return (\n    <div className=\"table-container\">\n      <div className=\"flex-table header\" role=\"rowgroup\">\n        <div className=\"flex-row\">PRICE</div>\n        <div className=\"flex-row\">TOTAL</div>\n        <div className=\"flex-row\">AMOUNT</div>\n        <div className=\"flex-row\">COUNT</div>\n      </div>\n      {renderAskRows()}\n    </div>\n  );\n}\n\nexport default AsksBook;\n","function updateBidsOrderBook(newBidsData) {\n  return {\n    type: 'UPDATE_BIDS_ORDER_BOOK',\n    newBidsData: newBidsData\n  }\n}\nexport default updateBidsOrderBook;","function updateAsksOrderBook(newAsksData) {\n  return {\n    type: 'UPDATE_ASKS_ORDER_BOOK',\n    newAsksData: newAsksData\n  }\n}\nexport default updateAsksOrderBook;","function clearAsksOrderBook(newAsksData) {\n  return {\n    type: 'CLEAR_ASKS',\n    newAsksData: []\n  }\n}\nexport default clearAsksOrderBook;","function clearBidsOrderBook(newBidsData) {\n  return {\n    type: 'CLEAR_BIDS',\n    newBidsData: []\n  }\n}\nexport default clearBidsOrderBook;","import React, { Component } from \"react\";\nimport BidsBook from \"../components/OrderBook/BidsBook\";\nimport AsksBook from \"../components/OrderBook/AsksBook\";\nimport { connect } from \"react-redux\";\nimport updateBidsOrderBook from \"../store/OrderBook/actions/update_bids\";\nimport updateAsksOrderBook from \"../store/OrderBook/actions/update_asks\";\nimport clearAsksOrderBook from \"../store/OrderBook/actions/clear_asks\";\nimport clearBidsOrderBook from \"../store/OrderBook/actions/clear_bids\";\nimport { bindActionCreators } from \"redux\";\n\nconst wss = new WebSocket(\"wss://api-pub.bitfinex.com/ws/2\");\nclass OrderBook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      connectionReady: true,\n      isConnected: false,\n      pres: \"P0\",\n      volume24h: 0,\n      lastPrice: 0,\n      priceChange: 0,\n      zoom: 1,\n    };\n  }\n  componentDidMount() {\n    this.subscribeToBtc();\n  }\n  componentWillUnmount() {\n    this.closeConnection();\n  }\n  morePrecision() {\n    this.closeConnection();\n    this.props.clearBidsOrderBook();\n    this.props.clearAsksOrderBook();\n    const currentPres = this.state.pres;\n    switch (currentPres) {\n      case \"P0\":\n        this.setState({ pres: \"P1\" });\n        break;\n\n      case \"P1\":\n        this.setState({ pres: \"P2\" });\n        break;\n\n      case \"P2\":\n        this.setState({ pres: \"P3\" });\n        break;\n\n      default:\n        return;\n    }\n\n    this.subscribeToBtc();\n  }\n\n  lessPrecision() {\n    this.closeConnection();\n    this.props.clearBidsOrderBook();\n    this.props.clearAsksOrderBook();\n    const currentPres = this.state.pres;\n    switch (currentPres) {\n      case \"P3\":\n        this.setState({ pres: \"P2\" });\n        break;\n\n      case \"P2\":\n        this.setState({ pres: \"P1\" });\n        break;\n\n      case \"P1\":\n        this.setState({ pres: \"P0\" });\n        break;\n\n      default:\n        return;\n    }\n\n    this.subscribeToBtc();\n  }\n  subscribeToBtc() {\n    const self = this;\n    this.setState({ isConnected: true });\n\n    function onMessageRecieved(payloadData) {\n      if (\n        !payloadData.event &&\n        Array.isArray(payloadData[1]) &&\n        payloadData[1].length === 3\n      ) {\n        //Is order book data\n        let tmpbookOrderRow = {\n          price: parseFloat(payloadData[1][0]),\n          count: payloadData[1][1],\n          amount: parseFloat(payloadData[1][2]),\n          total: parseFloat(0),\n        };\n        if (tmpbookOrderRow.amount > 0) {\n          self.props.updateBidsOrderBook(tmpbookOrderRow);\n        } else {\n          self.props.updateAsksOrderBook(tmpbookOrderRow);\n        }\n      }\n    }\n\n    wss.onopen = () => {\n      console.log(\"connected\");\n      self.setState({ connectionReady: true });\n      wss.send(JSON.stringify({ event: \"conf\", flags: 131072 }));\n      wss.send(\n        JSON.stringify({\n          event: \"subscribe\",\n          channel: \"book\",\n          pair: \"tBTCUSD\",\n          prec: self.state.pres,\n          len: 25,\n        })\n      );\n    };\n\n    wss.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data);\n      onMessageRecieved(message);\n    };\n\n    wss.onclose = () => {\n      console.log(\"disconnected\");\n      // automatically try to reconnect on connection loss\n    };\n  }\n\n  closeConnection() {\n    wss.close();\n    this.setState({ isConnected: false });\n  }\n\n  zoomOut() {\n    this.setState({ zoom: this.state.zoom - 0.2 });\n  }\n\n  zoomIn() {\n    this.setState({ zoom: this.state.zoom + 0.2 });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button\n            disabled={this.state.zoom < 0.21}\n            onClick={this.zoomOut.bind(this)}\n          >\n            Zoom Out\n          </button>\n          <button\n            disabled={this.state.zoom === 1}\n            onClick={this.zoomIn.bind(this)}\n          >\n            Zoom In\n          </button>\n        </div>\n        <div className=\"books-wrapper\">\n          <div className=\"bids-container\">\n            <BidsBook\n              orderBookBids={this.props.orderBookBids}\n              zoom={this.state.zoom}\n            />\n          </div>\n          <div className=\"asks-container\">\n            <AsksBook\n              orderBookAsks={this.props.orderBookAsks}\n              zoom={this.state.zoom}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderBookBids: state.orderBookBids,\n    orderBookAsks: state.orderBookAsks,\n    tradesList: state.tradesList,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      updateAsksOrderBook: updateAsksOrderBook,\n      updateBidsOrderBook: updateBidsOrderBook,\n      clearBidsOrderBook: clearBidsOrderBook,\n      clearAsksOrderBook: clearAsksOrderBook,\n    },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderBook);\n","export default function(state = [], newState, asks) {\n  let priceExists = false;\n\n  if (state.length > 0) {\n    state.forEach((row, index) =>{\n      if (\n        state[index].price &&\n        newState.price &&\n        state[index].price === newState.price\n      ) {\n        //Price already exists, so it should only update current row.\n        priceExists = true;\n        state[index].count = newState.count;\n        state[index].amount = newState.amount;\n      }\n    });\n  }\n\n  if (priceExists === true) {\n    priceExists = false;\n    return state.slice();\n  } else {\n    let newStateCombined = [...state, newState];\n    //Sort form lowest to highest price before returning. asks\n    //Sort form highest to lowest  price before returning. Bits\n    newStateCombined.sort(function(a, b) {\n      return asks ? a.price - b.price : b.price - a.price ;\n    });\n\n    if (newStateCombined.length > 50) {\n      newStateCombined.pop();\n    }\n\n    if (newStateCombined.length > 0) {\n      newStateCombined.forEach(function(row, index) {\n        if (!row || row.count === 0) {\n          newStateCombined.splice(index, 1);\n        }\n\n        if (asks && (!row || row.amount > 0)) {\n          newStateCombined.splice(index, 1);\n        }\n      });\n    }\n\n    return newStateCombined.map((row, index)=>{\n        if (newStateCombined[index - 1] && newStateCombined[index - 1].total) {\n            return {...row, total:(parseFloat(newStateCombined[index - 1].total) + Math.abs(parseFloat(row.amount))).toFixed(4)};\n        }\n        else{\n            return {...row,total: parseFloat(row.amount).toFixed(4)};\n        }\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport OrderBookBidsReducer from './OrderBook/reducers/bids'\nimport OrderBookAsksReducer from './OrderBook/reducers/asks'\n\n// const rootReducer = combineReducers({\n\t\n// });\n\n// export default rootReducer;\n\nconst saveToLocalStorage = (state) => {\n  try {\n    localStorage.setItem('state', JSON.stringify(state));\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst loadFromLocalStorage = () => {\n  try {\n    const stateStr = localStorage.getItem('state');\n    return stateStr ? JSON.parse(stateStr) : undefined;\n  } catch (e) {\n    console.error(e);\n    return undefined;\n  }\n};\n\nconst rootReducer = combineReducers({\n\torderBookBids: OrderBookBidsReducer,\n\torderBookAsks: OrderBookAsksReducer,\n});\n\nconst persistedStore = loadFromLocalStorage();\n\nconst store = createStore(rootReducer, persistedStore);\n\n\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState());\n});\n\nexport default store;","import dataManimpulator from '../reducerUtil';\n\nexport default function (state = [], action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_BIDS_ORDER_BOOK': \n\t\t\tlet newState = action.newBidsData;\n\t\t\treturn dataManimpulator(state, newState, false);\n\t\tcase 'CLEAR_BIDS': \n\t\t\t\treturn action.newBidsData;\n\t\tdefault:\n      \t\treturn state.slice()\n\t}\n}","import dataManimpulator from '../reducerUtil'\nexport default function (state = [], action) {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_ASKS_ORDER_BOOK': \n\t\t\tlet newState = action.newAsksData;\n\t\t\treturn dataManimpulator(state, newState, true);\n\t\t\tcase 'CLEAR_ASKS': \n\t\t\t\treturn action.newAsksData;\n\n\t\tdefault:\n      \t\treturn state.slice()\n\t}\n}","import React, { Component } from 'react';\nimport OrderBook from './containers/OrderBook';\n\nimport { Provider } from 'react-redux';\n\nimport reducers from './store/store';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={reducers}>\n        <div className=\"App\">\n          <OrderBook/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}